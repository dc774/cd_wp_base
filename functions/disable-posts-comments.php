<?php
/**
 * Defines the post types that will have comments enabled.
 *
 * @return array $no_comment_post_types The post types that should not have comments enabled.
 */
add_action('after_setup_theme', 'cd_wp_base_global_allow_comments');

if (!function_exists('cd_wp_base_global_allow_comments')) {
	function cd_wp_base_global_allow_comments() {

		// Add post types to allow comments on here.
		$allow_comments = array('');
		$all_post_types = get_post_types();

		global $no_comment_post_types;
		$no_comment_post_types = array_diff($all_post_types, $allow_comments);

		return $no_comment_post_types;
	}
}

/**
 * Removes the default "Hello World" post.
 *
 * This should run from the child theme. It saves a value in the database if it
 * has run already so it won't run more than once.
 */

add_action('after_switch_theme', 'cd_wp_base_remove_default_post');

if (!function_exists('cd_wp_base_remove_default_post')) {
	function cd_wp_base_remove_default_post() {
		// Check the database if the post has been removed already.
		if (get_option('cd_wp_base_hello_world_post_removed') == 'true') {
			return;
		}

		// Search for the default post.
		$hello_world_query_args = array(
			'post_type' => 'post',
			'post_title' => 'Hello World!',
			'posts_per_page' => 1,
		);

		// Get the default post.
		$cd_wp_base_hello_world = new WP_Query($hello_world_query_args);

		// If the post exists, delete it, and update the database.
		if ($cd_wp_base_hello_world->have_posts()) {
			$delete_default = $cd_wp_base_hello_world->posts[0];
			wp_delete_post($delete_default->ID, true);
			update_option('cd_wp_base_hello_world_post_removed', 'true');
		}
	}
}

/**
 * Removes comments support from the post types defined in $no_comment_post_types.
 */
add_action('init', 'cd_wp_base_remove_comments');

if (!function_exists('cd_wp_base_remove_comments')) {
	function cd_wp_base_remove_comments() {
		global $no_comment_post_types;
		foreach ($no_comment_post_types as $post_type) {
			remove_post_type_support($post_type, 'comments');
		}
	}
}

/**
 * Removes posts and comments from the admin menu.
 */
add_action('admin_menu', 'cd_wp_base_remove_posts_menu');

if (!function_exists('cd_wp_base_remove_posts_menu')) {
	function cd_wp_base_remove_posts_menu() {
		remove_menu_page('edit.php');
		remove_menu_page('edit-comments.php');
	}
}

/**
 * Removes comments from the admin bar.
 *
 * @param WP_Admin_Bar $wp_admin_bar The admin bar object generated by the admin_bar_menu hook.
 */
add_action('admin_bar_menu', 'cd_wp_base_remove_default_posts_admin_bar', 100);

if (!function_exists('cd_wp_base_remove_default_posts_admin_bar')) {
	function cd_wp_base_remove_default_posts_admin_bar($wp_admin_bar) {
		$wp_admin_bar->remove_node('new-post');
		$wp_admin_bar->remove_menu('comments');
	}
}

/**
 * Removes the "Quick Draft" widget from the dashboard.
 */

add_action('wp_dashboard_setup', 'cd_wp_base_remove_quick_draft');

if (!function_exists('cd_wp_base_remove_quick_draft')) {
	function cd_wp_base_remove_quick_draft() {
		remove_meta_box('dashboard_quick_press', 'dashboard', 'side');
	}
}

/**
 * Removes the "Comments" column from the posts list table.
 *
 * @param array $columns The post columns array generated by the manage-edit-post_columns filter.
 * @return array $columns The post columns array with the "Comments" column removed.
 */
add_filter('manage_edit-post_columns', 'cd_wp_base_remove_post_columns');

if (!function_exists('cd_wp_base_remove_post_columns')) {
	function cd_wp_base_remove_post_columns($columns) {
		unset($columns['comments']);
		return $columns;
	}
}

/**
 * Disables comments and pings on the frontend.
 *
 * False disables comments and pings, true enables them.
 *
 * @return bool False if the current post type is in the $no_comment_post_types array, else true.
 */
add_filter('comments_open', 'cd_wp_base_frontend_remove_comments', 20, 2);
add_filter('pings_open', 'cd_wp_base_frontend_remove_comments', 20, 2);

if (!function_exists('cd_wp_base_frontend_remove_comments')) {
	function cd_wp_base_frontend_remove_comments() {
		global $no_comment_post_types;
		$current_post_type = get_post_type();

		if (in_array($current_post_type, $no_comment_post_types)) {
			return false;
		} else {
			return true;
		}
	}
}
